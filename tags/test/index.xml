<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>test on Lambda</title><link>/tags/test/</link><description>Recent content in test on Lambda</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 25 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/test/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Project (4) Test More</title><link>/blog/python-project-4/</link><pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate><guid>/blog/python-project-4/</guid><description>Python Version Tests 如果專案只是一般服務，可能基本測試就足夠了，但是如果是要寫 Library 給別的專案或是開放給大家使用的話，就要考慮更多的相容性問題，例如： Python 版本，相依套件版本，等等，那一般的測試可能就不足以符合這樣的情境，因此我們需要更多的整合測試
tox 利用 tox 可以測試多種環境，如下圖： 他可以支援 .tox 和 pyproject.toml 但是在 pyproject.toml 裡面是用字串寫舊有設定格式，由於他會先把你的專案，用 setup.py 建立好，用 pip 裝起來後再去執行測試（指令），所以我們要把測試改寫到 tests ，並且儘量用絕對路徑去 import 我們自己的專案，這樣才不會有問題
Usage pip install tox tox -e py38-django31 py38-django31 inst-nodeps: /Users/super/project/prj/.tox/.tmp/package/1/prj-0.1.0.tar.gz py38-django31 installed: asgiref==3.3.4,attrs==20.3.0,coverage==5.5,Django==3.1.8,django-object-actions==3.0.2,prj @ file:///Users/super/project/prj/.tox/.tmp/package/1/prj-0.1.0.tar.gz,iniconfig==1.1.1,packaging==20.9,pluggy==0.13.1,ply==3.11,py==1.10.0,pyparsing==2.4.7,pytest==6.2.3,pytest-cov==2.11.1,pytest-django==4.2.0,python-dateutil==2.8.1,pytz==2021.1,rule-engine==3.2.0,six==1.15.0,sqlparse==0.4.1,toml==0.10.2 py38-django31 run-test-pre: PYTHONHASHSEED=&amp;#39;3217434528&amp;#39; py38-django31 run-test: commands[0] | coverage erase py38-django31 run-test: commands[1] | pytest tests ============================= test session starts ============================== platform darwin -- Python 3.8.5, pytest-6.2.3, py-1.10.0, pluggy-0.13.1 -- /Users/super/project/prj/.</description></item><item><title>Python Project (3) Test Your Project</title><link>/blog/python-project-3/</link><pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate><guid>/blog/python-project-3/</guid><description>Test 寫測試可以減少改壞以前的東西，加速開發，在原生的 Python 就有提供測試的方法 unittest，然而隨著越來越多的套件支援與其脫鉤，如果是開新專案，可以試著從一開始就使用 pytest
Pytest 該套件支援簡單的測試方法，多個套件支援其測試，例如在寫 Django Channels 時異步測試就推薦使用 pytest 可以支援其異步測試，該套件也支援 pyproject.toml 當作設定檔
Usage pip install pytest pytest tests =================================================== test session starts =================================================== platform darwin -- Python 3.8.5, pytest-6.2.3, py-1.10.0, pluggy-0.13.1 -- /Users/super/project/prj/venv/bin/python3 cachedir: .pytest_cache django: settings: settings (from ini) rootdir: /Users/super/project/prj, configfile: pyproject.toml plugins: cov-2.11.1, django-4.1.0 collected 26 items Creating test database for alias &amp;#39;default&amp;#39;... tests/test_admin/test_actions.py::TestCreateTransformationAction::test_transformation_action_check_fk_values PASSED tests/test_models/test_copy.py::TestInnerCopy::test_copy_to_new_diagram_inner_attr_are_copied PASSED tests/test_models/test_copy.py::TestInnerCopy::test_copy_to_new_diagram_nodes_will_be_copied PASSED tests/test_models/test_copy.py::TestInnerCopy::test_copy_to_new_diagram_transitions_will_be_copied PASSED tests/test_models/test_copy.py::TestDeepCopy::test_copy_to_new_diagram_inner_attr_are_copied PASSED tests/test_models/test_copy.py::TestDeepCopy::test_copy_to_new_diagram_nodes_will_be_copied PASSED tests/test_models/test_copy.</description></item></channel></rss>